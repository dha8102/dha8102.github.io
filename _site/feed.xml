<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aiden</title>
    <description>게으르기 때문에 게발자. 글쓰는 걸 좋아하고, 디자인과 개발을 좋아한다.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 04 Jul 2018 22:52:09 +0900</pubDate>
    <lastBuildDate>Wed, 04 Jul 2018 22:52:09 +0900</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>[GDG DEVFEST] 1시간만에 만드는 인공지능 챗봇</title>
        <description>&lt;p&gt;챗봇 : 인간의 언어를 흉내 낸다.&lt;/p&gt;

&lt;p&gt;능동적인 대화가 아닌 질문에 답변하는 형식&lt;/p&gt;

&lt;p&gt;많은 경험, 눈치, 언어적 이해&lt;/p&gt;

&lt;p&gt;패턴인식 자연어 처리 자동추론 데이터마이닝 지능엔진 시멘틱 웹 등을 사용하여 챗봇을 만듦&lt;/p&gt;

&lt;p&gt;사람이 대화의 의도(Intent), 재료(Entity), 분위기(Context) 를 알려준다.&lt;/p&gt;

&lt;p&gt;챗봇은 그를 기반으로 대화의 경험을 쌓고 응용한다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;챗봇에게 무엇을 가르칠까?&lt;/p&gt;

&lt;p&gt;스마트폰 판매원&lt;/p&gt;

&lt;p&gt;너무 모델명에 변수가 많아서 구글 데이터프렙으로 연관된 것들끼리 묶음.&lt;/p&gt;

&lt;p&gt;구글 네츄럴 랭귀지 API로 애매한 부분의 데이터 구분&lt;/p&gt;

</description>
        <pubDate>Sun, 19 Nov 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/review/2017/11/19/gdg-devfest-chatbot/</link>
        <guid isPermaLink="true">http://localhost:4000/review/2017/11/19/gdg-devfest-chatbot/</guid>
        
        <category>event</category>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>[FECONF 2017] RxJS 써야겠어요? 안써야겠어요?</title>
        <description>&lt;p&gt;RxJS&lt;/p&gt;

&lt;p&gt;비동기 처리. RxJS말고 다른거 많지않나 - callback, promise, generator, async/await 심지어 표준&lt;/p&gt;

&lt;h3 id=&quot;왜-rxjs&quot;&gt;왜 RxJS?&lt;/h3&gt;

&lt;p&gt;자바 9 - 리액티브 위드 스프링 5&lt;/p&gt;

&lt;p&gt;RxJs가 담당하는 영역 - 비동기 처리, 데이터 전파, 데이터 처리&lt;/p&gt;

&lt;p&gt;RxJS는 일관된 방식으로 / 안전하게 / 데이터 흐름을 / 처리하는 라이브러리이다.&lt;/p&gt;

&lt;p&gt;모든 어플리케이션은 궁극적으로 상태머신이다.&lt;/p&gt;

&lt;p&gt;입력값은 어떤 것이 있는가?&lt;/p&gt;

&lt;h3 id=&quot;개발자의-고민&quot;&gt;개발자의 고민&lt;/h3&gt;

&lt;p&gt;동기, 비동기&lt;/p&gt;

&lt;p&gt;함수호출, 이벤트, 콜백, 프라미스&lt;/p&gt;

&lt;p&gt;등등을 따로 처리해줘야함.&lt;/p&gt;

&lt;p&gt;시간축을 관점으로 동기와 비동기는 같다.&lt;/p&gt;

&lt;p&gt;RxJS로 하나의 방식으로 처리하자. 인터페이스의 단일화. - 모두 옵저버블로 처리하자.&lt;/p&gt;

&lt;p&gt;모든 어플리케이션은 궁극적으로 상태머신의 집합이다.&lt;/p&gt;

&lt;p&gt;Reactive Programming - 데이터가 자동으로 전파.&lt;/p&gt;

&lt;p&gt;이미 알고있는 것 - 옵저버 패턴&lt;/p&gt;

&lt;p&gt;RxJS - 개선된 옵저버 패턴&lt;/p&gt;

&lt;p&gt;옵저버블 - 옵저버
섭스크라이브 - next, error, complete&lt;/p&gt;

&lt;h3 id=&quot;rxjs는함수형프로그래밍-고차함수를-제공한다&quot;&gt;RxJS는(함수형프로그래밍) 고차함수를 제공한다.&lt;/h3&gt;

&lt;p&gt;고차함수 (HOC)&lt;/p&gt;

&lt;p&gt;사이드 이펙트&lt;/p&gt;

&lt;p&gt;함수형프로그래밍은 순수함수를 지향한다. 같은입력 : 같은 출력 / 사이드 이팩트 지양&lt;/p&gt;

</description>
        <pubDate>Sat, 21 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/review/2017/10/21/feconf-rxjs/</link>
        <guid isPermaLink="true">http://localhost:4000/review/2017/10/21/feconf-rxjs/</guid>
        
        <category>event</category>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>[DEVIEW 2017] 자율주행과 기계학습</title>
        <description>&lt;h2 id=&quot;자율주행과-기계학습&quot;&gt;자율주행과 기계학습&lt;/h2&gt;

&lt;h3 id=&quot;자율주행-기술&quot;&gt;자율주행 기술&lt;/h3&gt;

&lt;p&gt;내가 어딘지, 주변에 무슨일이 있는지, 컨트롤.&lt;/p&gt;

&lt;p&gt;측위(로컬라이제이션 , 매핑)&lt;/p&gt;

&lt;p&gt;인식(펄셉션)&lt;/p&gt;

&lt;p&gt;제어(컨트롤)&lt;/p&gt;

&lt;p&gt;인식과 제어를 위주로 이야기 할 예정.&lt;/p&gt;

&lt;h3 id=&quot;기계학습-연구&quot;&gt;기계학습 연구&lt;/h3&gt;

&lt;p&gt;요즘 트랜드는&lt;/p&gt;

&lt;p&gt;영상 - 인식,제어 알고리즘 - 제어&lt;/p&gt;

&lt;p&gt;영  상 - CNN - 제어 (behavior cloning : 정답을 학습시키는 것)&lt;/p&gt;

&lt;p&gt;이상상황을 대처하기 어려움.&lt;/p&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;p&gt;라지스케일 비디오 데이터셋 - 버클리&lt;/p&gt;

&lt;p&gt;블랙박스 영상을 활용하여 - 다양한 운전가, 다양한 도로 상황에 대한 데이터 확보&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;일반적인 운전자 모델 학습이 목표&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;기존 연구들은&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;특수한 차량 플랫폼이 필요&lt;/li&gt;
  &lt;li&gt;시뮬레이터에서 구현&lt;/li&gt;
  &lt;li&gt;성능이 아쉽다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;이미지-기반-차선변경&quot;&gt;이미지 기반 차선변경&lt;/h3&gt;

&lt;p&gt;카메라, 딥러닝, 문제 간략화&lt;/p&gt;

</description>
        <pubDate>Mon, 16 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/review/2017/10/16/deview-autonomous-driving/</link>
        <guid isPermaLink="true">http://localhost:4000/review/2017/10/16/deview-autonomous-driving/</guid>
        
        <category>event</category>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>[스타트업]스타트업형 인간</title>
        <description>&lt;p&gt;나는 글을 쓰는 걸 좋아한다. 왜냐하면, 글을 쓰는 걸 좋아하기 때문이다. 좋아하는데 이유가 어딨어.&lt;/p&gt;

&lt;p&gt;농담이지만 좋아하는 것에 항상 이유가 준비되어 있을 필요는 없다. 그리고 나는 스타트업형 인간을 좋아한다. (빠른 전개)&lt;/p&gt;

&lt;h2 id=&quot;스타트업&quot;&gt;스타트업&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;대 스타트업 시대라고 할 수 있다. 모바일의 부흥으로 IT업계가 발전하면서, 기업과 제품들이 보다 드러나기 쉬워졌고, 제품만 좋으면 마케팅을 못해서 망하는 경우가 대폭 줄었다.&lt;/p&gt;

&lt;p&gt;물론 그 전이라고해서 스타트업이라는게 없지는 않았다. 벤쳐라는 말로 다르게 불렸을까.&lt;/p&gt;

&lt;p&gt;스타트업을 시작하게 된 계기들도 다양하다. 어떤 스타트업은 그냥 돈이 될 것 같아서, 어떤 곳은 다니던 회사가 싫어서, 또 어떤 곳은 세상에 영향을 끼치고 싶어서 등등 각자의 사정으로 스타트업은 생겨났다.&lt;/p&gt;

&lt;p&gt;수도 없이 많은 스타트업이 망하고(나도 ㅠ), 또 많은 스타트업이 대성했다. 스타트업의 흥망을 떠나 스타트업들은 어떤 비슷한 부류의 유전자적 면모를 가지고있다.&lt;/p&gt;

&lt;h2 id=&quot;스타트업형-인간&quot;&gt;스타트업형 인간&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;스타트업은 가만히 있는 순간이 없다. 끊임없이 변하고, 끊임없이 발전한다. 스타트업에게 스테이블이란 없으며, 스테이블 버전은 고객에게 상대적으로 오래 머무르는 버전일 뿐이다.&lt;/p&gt;

&lt;p&gt;많은 스타트업이 ‘린’하게 스타트업을 한다. 린스타트업이라는게 뭐냐면, 자신들이 제공할 수 있는 최소한의 가치를 지닌 제품(MVP)을 재빠르게 만들어서 고객에게 전달하는 것이다.&lt;/p&gt;

&lt;p&gt;우리나라의 경우 사람들이 서비스에 지갑을 여는 데에 인색하지만, 물 건너 나라는 내가 산 음식을 나한테 서빙해주는 데에도 가격을 지불한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;딱 한가지만 다른 것들보다 좋아도 밥은 굶지 않을 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;스타트업은 자신들이 제공할 수 있는 최소한의 가치를 담은 제품을 만들고, 공개한다. 망하면, 또 만든다. 또 망하면, 또또 만든다.&lt;/p&gt;

&lt;p&gt;칠전팔기 저리가라다. 제품하나 만드는데 사실 여러번 망한다. 기획이고 개발이고 심지어 팀까지 갈아엎어지는 경우가 부지기수이다.&lt;/p&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-format=&quot;fluid&quot; data-ad-layout=&quot;in-article&quot; data-ad-client=&quot;ca-pub-9134477021095729&quot; data-ad-slot=&quot;3873336698&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
     (adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;사명감&quot;&gt;사명감&lt;/h3&gt;

&lt;p&gt;스타트업의 사명이라면 아마 세상을 더 이롭게 만드는 것일것이다(아님말고). 자신들이 제공하는 제품이 널리 사용되어서 세상을 바꾸는 것.&lt;/p&gt;

&lt;p&gt;그런 사명이 있기 때문에 그들은 몇번씩이나 다시 도전하는 것 아닐까.&lt;/p&gt;

&lt;p&gt;살면서 줏대(신념)가 필요하다는 데에 아마 많은 사람들이 동의할 것이다. 남이 하자는대로 다 하면, 나는 없어지고 남만 남는다.&lt;/p&gt;

&lt;p&gt;‘나는 하루에 한시간은 무조건 공부할거야.’ 라는 사람과 ‘오늘 못하면 내일 두시간하지 뭐.’의 차이는 크다.&lt;/p&gt;

&lt;p&gt;예를 들어 두 경우 모두 회식자리가 있다고 해보자. 전자의 경우는 공부를 하고 한시간을 늦게 가거나 중간에 나오거나, 어떤식으로든 공부할 시간을 만들어 공부를 할것이다.&lt;/p&gt;

&lt;p&gt;반면에 후자의 경우는 열심히 놀고, 다음날 밀린 진도에 기겁을 할 수도있다.&lt;/p&gt;

&lt;h3 id=&quot;능력&quot;&gt;능력&lt;/h3&gt;

&lt;p&gt;일은 한가지만 잘해도 된다. 하지만, 스타트업에 종사하는 사람이라면 기본적으로 2가지 이상의 일을 함께 하게 되기 마련이다.&lt;/p&gt;

&lt;p&gt;특히 규모가 작고, 초기일수록 더 그렇다.&lt;/p&gt;

&lt;p&gt;개발을 하면서 기획회의도 참석하고, 마케팅을 하면서 영업과 디자인도 함께하고, 얼마 없는 돈이라도 돈관리도 해야한다.&lt;/p&gt;

&lt;p&gt;어느정도 역할을 정해 가능하면 두가지정도로 줄이는게 가장 아름다운 시나리오라고 생각하지만, 말처럼 쉬운건 아니다.(현실은 시궁창과 같다.)&lt;/p&gt;

&lt;p&gt;두가지 이상의 일을 1년 정도 하는 것은 나쁘지않다. 거기다 한가지는 자신의 전문분야일 것이고, 다른 하나는 그나마 자신이 관심있는 것일 것일테니까.&lt;/p&gt;

&lt;p&gt;물론 잠시 발을 담구었다고 그 분야에 말 많은 사람이 되면 곤란하지만. 개발만 아는 것보단, 개발과 기획 또는 디자인이나 UX를 함께 아는게 더 발전적인 제품을 만들 수 있는 스펙이라고 생각한다.&lt;/p&gt;

&lt;h3 id=&quot;도전&quot;&gt;도전&lt;/h3&gt;

&lt;p&gt;평범하게 회사를 다니며 월급을 받고, 점심시간도 즐기고, 가끔 야근도하고, 그렇게 지내면된다.&lt;/p&gt;

&lt;p&gt;근데, 뛰쳐나와서 세상을 바꾸겠다고 나온 사람들이다. 권장하는건 아니지만, 그렇다고 나쁜 것도 아니다. 무언가에 도전한다는 건 현재가 싫다는 반증이 되진 않는다. 그들은 그냥. 자신이 원해서 하는것이다.&lt;/p&gt;

&lt;p&gt;하고싶은것만 하기도 바쁜세상이다. 현재가 하기 싫은 일의 비중이 높다면 이직이나, 다른 방법을 찾는 건 당연한 수순이다. 말그대로 스스로 자신의 일을 만드는 것이다.&lt;/p&gt;

&lt;h2 id=&quot;마무리&quot;&gt;마무리&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;글쎄, 만약 스타트업형 인간이라는 걸 정의 할 수 있다면 이런게 아닐까. 바닥에 굴러도, 먼지털고 일어나서 멀쩡히 걷는 사람들.&lt;/p&gt;
</description>
        <pubDate>Fri, 16 Jun 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/essay/2017/06/16/people-like-startup/</link>
        <guid isPermaLink="true">http://localhost:4000/essay/2017/06/16/people-like-startup/</guid>
        
        <category>essay</category>
        
        <category>startup</category>
        
        
        <category>essay</category>
        
      </item>
    
      <item>
        <title>[리눅스]가상머신(virtualBox)에서 게스트 확장(드래그앤드롭, 클립보드 공유, 전체화면) 하기</title>
        <description>&lt;p&gt;이번 포스팅에서는 가상머신 oracle virtualBox에서 호스트pc와 드래그 앤 드롭, 클립보드 공유, 전체화면을 하는 방법을 알아보겠습니다.&lt;/p&gt;

&lt;h3 id=&quot;0개요&quot;&gt;0.개요&lt;/h3&gt;

&lt;p&gt;호스트pc와 가상머신간의 데이터를 편하게 이동할 수 있도록 하고 싶은데 보통 초기 설정만으로는 잘 되지 않습니다. 그럴 때 드래그 앤 드롭, 클립보드 공유, 전체화면 등을 할 수 있는 방법이 있습니다. 가상머신에 게스트 확장모드를 설치하면 가능하게 됩니다.&lt;/p&gt;

&lt;h3 id=&quot;1게스트확장-하기&quot;&gt;1.게스트확장 하기&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;http://postfiles5.naver.net/20160323_196/zooqzqz_1458663975606uWlMX_PNG/1.PNG?type=w773&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;가상머신의-장치에서-게스트-확장-cd-이미지-삽입을-클릭합니다&quot;&gt;가상머신의 장치에서 ‘게스트 확장 CD 이미지 삽입..’을 클릭합니다.&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;http://postfiles6.naver.net/20160323_197/zooqzqz_1458663975891yt55u_PNG/2.PNG?type=w773&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;http://postfiles5.naver.net/20160323_164/zooqzqz_1458663976075gve5y_PNG/3.PNG?type=w773&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;확인을-누르면-게스트-확장-모드가-설치가-됩니다-설치가-완료되면-전체화면-드래그앤드롭-클립보드-공유가-가능해집니다&quot;&gt;확인을 누르면 게스트 확장 모드가 설치가 됩니다. 설치가 완료되면 전체화면, 드래그앤드롭, 클립보드 공유가 가능해집니다.&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;http://postfiles8.naver.net/20160323_199/zooqzqz_1458664441576mewbB_PNG/3-1.PNG?type=w773&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;http://postfiles9.naver.net/20160323_216/zooqzqz_1458664441843db9ew_PNG/3-2.PNG?type=w773&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;설치가-되었다면-장치의-클립보드-공유-양방향-드래그-앤-드롭-양방향을-선택해-줍니다&quot;&gt;설치가 되었다면 장치의 ‘클립보드 공유’-&amp;gt;’양방향’ ,’드래그 앤 드롭’-&amp;gt;’양방향’을 선택해 줍니다.&lt;/h4&gt;

&lt;h3 id=&quot;2마치며&quot;&gt;2.마치며&lt;/h3&gt;

&lt;p&gt;virtualBox에서 드래그앤드롭, 클립보드 사용을 하려고 엄청 헤메었던 적이 있습니다. 저같은 분이 없으시길 바라며 이 포스팅을 올립니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;http://gfmarket.phinf.naver.net/cony_special/original_31.png?type=p50_50&quot; alt=&quot;스티커 이미지&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 30 May 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2017/05/30/linux-guest-extension/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2017/05/30/linux-guest-extension/</guid>
        
        <category>linux</category>
        
        <category>guest</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>HTML 태그와 개행문자를 포함한 내용 찾기 정규표현식</title>
        <description>&lt;p&gt;요약 서비스를 만들고 있다.&lt;/p&gt;

&lt;p&gt;아무래도 개발자 블로그를 많이 보다보니까 테스트를 했는데, 요약 내용에 죄다 코드가 나오더라.&lt;/p&gt;

&lt;p&gt;요약 서비스의 알고리즘에 연관성이 있는 녀석을 찾는게 있는데 사실 코드만큼 서로 연관 있는 것도 없을거다.&lt;/p&gt;

&lt;p&gt;그래서 수정에 들어갔다.&lt;/p&gt;

&lt;p&gt;코드는 대부분 pre 또는 code 태그안에 들어있어서 그 안에 있는 내용을 모두 찾는 정규표현식을 사용했다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;pre.*?&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;이렇게 해놓고 잘했다고 좋아하고 있었는데… 일반적인 태그는 다 체크가 된다. 근데 pre에는, 그니까 코드에는 대부분 개행문자가 들어있다.&lt;/p&gt;

&lt;p&gt;근데 이러면 개행문자는 확인을 못한다.&lt;/p&gt;

&lt;p&gt;한참을 고생해서 만든게 아래와 같은 식이다.&lt;/p&gt;

&lt;p&gt;너무 간단해보여서 식은 안세웠는데 생각보다 오래걸렸다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;pre([^])*?.*?&amp;lt;\/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;이거 만드느라 고생했다. 정규식은 아직도 어렵다.&lt;/p&gt;

&lt;p&gt;정규식은 따로 정리를 한번 해보려한다.&lt;/p&gt;
</description>
        <pubDate>Fri, 12 May 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2017/05/12/regex-tag/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2017/05/12/regex-tag/</guid>
        
        <category>regex</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>개발자를 위한 JavaScript - 2 객체지향적 자바스크립트</title>
        <description>&lt;p&gt;자바스크립트의 객체지향적인 면모를 알아보자.&lt;/p&gt;

&lt;h2 id=&quot;서문&quot;&gt;서문&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;객체지향적인 개발은 복잡하고 탄탄해야하는 현대 개발 산업에 맞춰 진화한 개발방식이다. 현대의 거의 지배적인 방식이라고 볼 수 있다.&lt;/p&gt;

&lt;p&gt;객체지향적인 언어라면 이미 Java, C++등을 알고 있을 수 있다. 두 언여 역시 자신만의 객체지향적인 개념을 가지고 있는데, 자바스크립트도 마찬가지다.&lt;/p&gt;

&lt;p&gt;오늘은 자바스크립트의 객체지향적인 면모를 알아보자.&lt;/p&gt;

&lt;h2 id=&quot;객체지향&quot;&gt;객체지향&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;객체지향의 기본은 객체를 만들고 그 객체들을 조합하여 하나의 프로그램을 만드는 것이라고 할 수 있다.&lt;/p&gt;

&lt;p&gt;객체는 쉽게 말하면 변수와 메소드를 모은 것이라고 할 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;정확히 말해 변수와 메소드를 모은건 클래스라고 부른다. 클래스가 실제 할당되어 나온 인스턴스가 객체이다.
아마 전공자라면 대학교에서 객체지향프로그래밍또는 프로그래밍언어에서 배운 기억이 있을거다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;객체지향의-특징&quot;&gt;객체지향의 특징&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;흔히 말하는 객체지향적 사고를 하기 위해서는 객체지향의 특징을 알아야한다.&lt;/p&gt;

&lt;h3 id=&quot;추상화&quot;&gt;추상화&lt;/h3&gt;

&lt;p&gt;추상화라는건 사실 좀 추상적으로 들릴 수 있지만. 어떤 모듈또는 부품을 만든다고 생각하면 쉽다.&lt;/p&gt;

&lt;p&gt;예를 들어 학교라는 프로그램을 만들때 선생님과 학생이라는 부품을 만드는 것이다.&lt;/p&gt;

&lt;h3 id=&quot;캡슐화&quot;&gt;캡슐화&lt;/h3&gt;

&lt;p&gt;캡슐화라는건 내부로직은 숨기고 사용방법만 노출하는 거라고 할 수 있다.&lt;/p&gt;

&lt;p&gt;예를 들어 학생은 교수님이 성적을 어떻게 매기는지 모르지만, 교수님에게서 성적을 받아 볼 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;상속&quot;&gt;상속&lt;/h3&gt;

&lt;p&gt;상속은 말그대로 물려받는 것을 말한다.&lt;/p&gt;

&lt;p&gt;예를 들어 학교라는 프로그램을 만들때 선생님과 학생, 관리원, 미화원 이라는 클래스는 모두 사람이라는 공통점이 있다. 이럴 때 사람이라는 상위 클래스를 만들어 각각의 객체에 사람의 특징을 물려줄 수 있다.&lt;/p&gt;

&lt;p&gt;이럼으로써 사람에 해당하는 파트는 각 클래스에서 다시 작성할 필요가 없어진다.&lt;/p&gt;

&lt;h3 id=&quot;다형성&quot;&gt;다형성&lt;/h3&gt;

&lt;p&gt;다형성이란 조금씩 다른 방법으로 일을 하는 함수를 같은 이름으로 호출하는 것이라고 할 수 있다.&lt;/p&gt;

&lt;p&gt;예를 들어 총을 쏘는 것과 활을 쏘는 것은 방법은 다르지만, ‘쏘세요!’ 했을 때 두 경우 모두 쏘는 것을 말한다.&lt;/p&gt;

&lt;h2 id=&quot;자바스크립트의-객체지향&quot;&gt;자바스크립트의 객체지향&lt;/h2&gt;
&lt;hr /&gt;

&lt;h3 id=&quot;생성자&quot;&gt;생성자&lt;/h3&gt;

&lt;p&gt;자바스크립트에서 객체를 만들 때 함수를 이용한다. new를 붙여 함수를 부르면 객체가 리턴된다.&lt;/p&gt;

&lt;p&gt;아래처럼 사용한다.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello, I am '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dev'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;prototype과-상속&quot;&gt;prototype과 상속&lt;/h3&gt;

&lt;p&gt;prototype은 원형이라고 할 수 있다.&lt;/p&gt;

&lt;p&gt;이를 사용해서 상속을 구현할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello, I am '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Programmer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;coding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' World'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Programmer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Programmer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dev'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//Hello, I am dev&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;coding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;//Hello dev World&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;object&quot;&gt;Object&lt;/h3&gt;

&lt;p&gt;모든 객체가 상속하는 조상 객체이다. Object에 prototype을 사용해서 상속시키면 모든 객체에 영향을 미칠 수 있다.&lt;/p&gt;
</description>
        <pubDate>Thu, 13 Apr 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2017/04/13/JavaScript2/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2017/04/13/JavaScript2/</guid>
        
        <category>javascript</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>git 되돌리기</title>
        <description>&lt;p&gt;실수했다.&lt;/p&gt;

&lt;p&gt;오늘도 코드를 작성하다 실수를 했다. 항상 하는 실수지만 좀 커다란 실수였다. Atom에서 Replace를 잘못하는 바람에 코드가 뒤죽박죽되어 다 날려버렸다.&lt;/p&gt;

&lt;p&gt;결론적으로 배운건 2가지&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;git을 자주 커밋하자.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이전으로 git 되돌리는 법.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;하… 한숨 한번 쉬고 git 되돌리는 법을 알아보자.&lt;/p&gt;

&lt;h2 id=&quot;git-되돌리기&quot;&gt;git 되돌리기&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;git add 명령을 하기 전&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;git checkout {file}&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;file이 아니라 dir을 넣을 경우 dir내의 모든 file이 되돌아간다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git add를 한 경우&lt;/p&gt;

    &lt;p&gt;HEAD를 이전으로 돌려서 commit을 없앤다.&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;git reset –hard HEAD^&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;push한 기록을 없애려면&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;git reset HEAD^ //되돌리고
git commit //커밋하고
git push origin +master //강제로 씌운다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이제 어제 하던 작업을 다시하러가야겠다.&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Feb 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/devlog/2017/02/15/git-%EB%90%98%EB%8F%8C%EB%A6%AC%EA%B8%B0/</link>
        <guid isPermaLink="true">http://localhost:4000/devlog/2017/02/15/git-%EB%90%98%EB%8F%8C%EB%A6%AC%EA%B8%B0/</guid>
        
        <category>git</category>
        
        <category>devlog</category>
        
        
        <category>devlog</category>
        
      </item>
    
      <item>
        <title>나는 프로그래머다 - 나프다를 읽고</title>
        <description>&lt;p&gt;팟캐스트 중에 &lt;code class=&quot;highlighter-rouge&quot;&gt;나는 프로그래머다&lt;/code&gt; 라는 방송이 있다.&lt;/p&gt;

&lt;h2 id=&quot;나는프로그래머다&quot;&gt;나는프로그래머다&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;나는 이 방송의 존재를 책을 통해 먼저 알았다. 세명의 시니어 개발자가 어떤 주제에 대해 서로간의 대화 또는 게스트와의 대화를 방송하고 같은 이름의 책으로 엮은 것이다.&lt;/p&gt;

&lt;p&gt;이 책을 읽고 나는 아직 주니어 개발자로써 머리를 한 대 맞은 기분이었다. 이미 각자의 자리에서 꽤나 잘 나가고 있는 시니어 개발자들의 대화가 너무나 방대하고 깊었기 때문이다. 이 책을 읽고 든 생각은 돌아보면 주니어가 제일 공부를 안한다는 거다.&lt;/p&gt;

&lt;p&gt;보안, 취업, 커리어, 개발자의 삶, 기술, 트랜드까지. 너무나도 다양하고 많은 지식들이 책 속에 녹아들어있었다. 컴퓨터학부의 총서가 &lt;code class=&quot;highlighter-rouge&quot;&gt;컴퓨터개론&lt;/code&gt;이라면 개발자의 총서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;나는프로그래머다&lt;/code&gt; 가 아닐까?&lt;/p&gt;

&lt;p&gt;책에서 말하길 개발자와 컨퍼런스는 뗄 수 없는 관계라고 한다. 개발자와 공부를 뗄 수 없기 때문이고, 네트워킹을 뗄 수 없기 때문이다. 개발자가 공부를 멈추는 순간 도태되고 네트워킹을 멈추는 순간 &lt;code class=&quot;highlighter-rouge&quot;&gt;우물안 개구리&lt;/code&gt;가 된다.&lt;/p&gt;

&lt;p&gt;나는 2016년부터 컨퍼런스에 참여하기 시작했다. 처음 그 곳에서 경험한 지식은 정말이지 혁명이었다. 스타트업을 준비하고 있던 나는 스타트업을 하면서 시니어 개발자의 필요와 끊임없는 공부의 필요를 절실히 느꼈다.&lt;/p&gt;

&lt;p&gt;모르면 쓸 수 없다. 버블정렬밖에 모르는데 퀵정렬을 쓸 수 없다. 처음 컨퍼런스를 다녀오고 난 후, 나는 페이스북에 스타트업, 개발, 디자인에 관한 페이지를 보이는대로 구독했다. 조금 활발한 개발자 커뮤니티, 블로그 사이트도 모두 즐겨찾기 해놓았다.&lt;/p&gt;

&lt;p&gt;그래도 부족하다. 나는 스프링을 2년, 리액트를 1년 한 3년차 개발자다. 스타트업을 준비했고 디자인에도 관심을 끊은적이 없다. 나름 열심히 산다고 생각했지만, 나는 너무 아는게 없어서 수많은 기술, 개발 블로그의 글들을 전부 이해할 수는 없다. 나는 아직 더 공부해야한다.&lt;/p&gt;

&lt;h2 id=&quot;마치며&quot;&gt;마치며&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;이 책을 읽고 많은 정보를 얻었지만, 정말 배울 수 있었던건 개발자는 끊임없이 배워야 한다는 것이었다. 저 선배들처럼 나도 많은 것을 알고 많은 것을 나누어 줄 수 있는 사람이 되고싶다.&lt;/p&gt;
</description>
        <pubDate>Tue, 31 Jan 2017 20:21:33 +0900</pubDate>
        <link>http://localhost:4000/review/2017/01/31/%EB%82%98%EB%8A%94%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EB%8B%A4-%EB%82%98%ED%94%84%EB%8B%A4%EB%A5%BC-%EC%9D%BD%EA%B3%A0/</link>
        <guid isPermaLink="true">http://localhost:4000/review/2017/01/31/%EB%82%98%EB%8A%94%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EB%8B%A4-%EB%82%98%ED%94%84%EB%8B%A4%EB%A5%BC-%EC%9D%BD%EA%B3%A0/</guid>
        
        <category>dev</category>
        
        <category>book</category>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>[외장하드 케이스][iptime hdd 3125]하드디스크(HDD)를 외장하드로 만들기 [(1).외장하드케이스란?]</title>
        <description>&lt;p&gt;안녕하세요 오늘은 외장하드 케이스 iptime hdd 3125에 대해 알아보겠습니다.&lt;/p&gt;

&lt;h3 id=&quot;0외장하드-케이스란&quot;&gt;0.외장하드 케이스란?&lt;/h3&gt;

&lt;p&gt;외장하드케이스란 집에 사용하지 않는 하드디스크를 외장하드로 만들어주는 모듈을 이야기 합니다.&lt;/p&gt;

&lt;p&gt;저같은 경우는 노트북에 있던 hdd를 ssd로 교체하면서 하드디스크가 남게 되었는데요 급작스럽게 교체하느라 백업해두지 않은 정보를 쉽게 가져오기 위해 구입하였습니다.&lt;/p&gt;

&lt;h3 id=&quot;1iptime-hdd-3125&quot;&gt;1.iptime hdd 3125&lt;/h3&gt;

&lt;p&gt;&amp;lt;이 제품의 스펙은 아래와 같습니다.
&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;http://postfiles6.naver.net/20160331_133/zooqzqz_1459428351285idcvH_PNG/aa.PNG?type=w773&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.5형 하드를 수납가능하고, USB3.0으로 통신 가능합니다. 백업기능이 탑재된 외장하드 케이스입니다.&lt;/p&gt;

&lt;h3 id=&quot;2외장하드-요소&quot;&gt;2.외장하드 요소&lt;/h3&gt;

&lt;p&gt;외장하드 케이스를 구입할 때 확인해 보아야 할 것이 3가지 있습니다.&lt;/p&gt;

&lt;p&gt;첫째, 내가 가지고 있는 하드 규격이 무엇인가.&lt;br /&gt;
둘째, 자체 백업 솔루션을 가지고 있는가.&lt;br /&gt;
셋째, 통신 규격이 무엇인가.&lt;br /&gt;
첫째로 내가 가지고 있는 하드와 맞는 규격의 외장하드 케이스를 사용해야 자신의 하드를 외장하드로 만들수 있습니다.  기껏 구입했는데 규격이 맞지 않아 사용할 수 없다면 가슴아프겠죠? 일반적으로 노트북에 쓰이는 하드의 규격은 2.5인치 입니다.구매 전 꼭 확인해 보시고 구매하세요!&lt;br /&gt;
둘째로 자체 백업 솔루션을 가지고있는지의 유무는 번거로움 그리고 안정성을 위해서 입니다. 외장하드는 특성상 자료에 문제가 생기는 경우가 대뜸 있곤 합니다. 그럴때 백업해 두지 않았다면 몇년간 모아놓았던 자료들을 모두 잃을 수도 있습니다. 자체 솔루션이 있다면 간편하게 백업할 수 있고, 그렇지 않다면 스스로 백업을 해놓으시는것이 좋습니다. 그리고 비슷한 의미에서 외장하드케이스가 하드를 견고히 잡아주는지도 신경쓰시면 좋습니다.&lt;br /&gt;
마지막으로 통신 규격이란 USB 2.0을 지원하는지 3.0을 지원하는지 아니면 무선통신이 가능한지 등을 이야기 합니다. USB 3.0을 지원한다면용량이 큰자료들도 빠르게자료이동을 할 수 있으니 당연히 좋겠지요? 물론 자신의 노트북이나 PC도 USB 3.0을 지원해야 합니다.  &lt;/p&gt;

&lt;h3 id=&quot;3구매-요인&quot;&gt;3.구매 요인&lt;/h3&gt;

&lt;p&gt;저는 사용하는 노트북이 USB 3.0을 지원하고 하드가 2.5인치 이므로 이 제품을 선택하였습니다. 가격이 더 저렴한 것도 있고 더 비싼것도 있지만, 현재 1만5000원 내로 구매할 수 있는 제품중에 가장 괜찮은 스펙과 안전성을 갖춘 제품이지 않은가 싶습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;큰 자료들(영화, 영상 등)을 잘 옮기시지 않으시는 분들은 USB 3.0의 통신규격을 갖춘 외장하드를 굳이 구매하실 필요는 없습니다. 간단한 파일들을 옮길 때에는 USB 2.0도 충분히 빠르며 가격도 거의절반으로 떨어집니다.&lt;/p&gt;

&lt;p&gt;여러분들도 자신에게 맞는 외장하드 케이스를 구매하시기 바랍니다.&lt;/p&gt;

&lt;p&gt;다음 포스팅에서는 개봉과 사용에 대해서 알아보겠습니다.&lt;/p&gt;
</description>
        <pubDate>Thu, 31 Mar 2016 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/review/2016/03/31/iptime-hdd-1/</link>
        <guid isPermaLink="true">http://localhost:4000/review/2016/03/31/iptime-hdd-1/</guid>
        
        <category>things</category>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>[리뷰][왜 나는 너를 사랑하는가]남자가 여자를 사랑할 때. </title>
        <description>&lt;p&gt;사랑해본 적이 있으신가요?&lt;/p&gt;

&lt;p&gt;길을 걷다 너무도 마음에 드는 사람을 만나 사랑해본적.&lt;/p&gt;

&lt;p&gt;오래동안 친구였던 아이에게 사랑을 느껴본 적.&lt;/p&gt;

&lt;h2 id=&quot;왜-나는-너를-사랑하는가&quot;&gt;[왜 나는 너를 사랑하는가]&lt;/h2&gt;

&lt;p&gt; 오늘 이야기할 책에서 다루는 내용은 ‘사랑’입니다. 그것도 ‘남자의 사랑’이죠. 20대 청춘이라면 한창 꽃잎처럼 봄바람에 흔들릴 요즘같은 봄에 꼭 어울릴 책입니다. 하지만 제가 진짜로 이 책을 추천하고 싶은 분은 ‘최근에 이별을 경험하신 분’입니다. ‘왜 그런가’는 함께 살펴보며 알아보겠습니다.&lt;/p&gt;

&lt;p&gt; 제가 이 책을 읽게 됀 계기는 제가 이별에 빠져있던 어느 날, 서점에서 너무도 저를 궁금하게 했던 제목 때문이었습니다. 이별을 하고 난 뒤 ‘사랑이 무엇일까?’ ‘나는 왜 그녀를 사랑했을까?’ 라는 생각을 이따금씩 하고 있던 중이었기 때문이죠.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;왜 나는 그녀를 사랑했을까?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; 이 책이 내게 그 답변을 줄 수 있을까 하는 마음에 책을 가지고 집으로 가는 길에도 호기심이 가득했습니다. 지금은 이별했지만, 이 다음엔 더 성숙한 사랑을 할 수 있도록 배우고 싶은 마음이 가득했죠. 집에 도착해서 책을 펴는 순간. 저는 소설 속 주인공 ‘나’가 되었습니다.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;조금 더 성숙한 사랑&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;짧은요약&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; 이 책은 ‘한 남자가 한 여자를 사랑하며 일어나는 이야기’라고 표현할 수 있습니다. 주인공 ‘나’가 ‘클로이’라는 여자와 처음 운명적으로 만나는 순간부터의 이야기. ‘나’는 비행기에서 만난 ‘클로이’와 우연히 대화를 하게 됩니다. ‘나’는 첫만남에 사랑에 빠지게 되며 서로에게 때로 심술도 부리고, 더 사랑스러움을 느끼고, 삐치고 헤어지는 모습들을 철학적으로 분석, 생각합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;“왜 그렇게 좋던 사람이, 그사람이 나를 좋아한다는 확신이 들자마자 싫어지는걸까?” 마르크스 주의는 사랑을 할때에도 어김없이 찾아온다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt; ”너를 마시멜로 해” 그녀는 세상에서 가장 달콤한 말이라고 답했다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt; ”나는 그녀에게서 무엇을 보는가?” 내가 보는 그녀의 모습은?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt; ”가만히 내버려 둬! 제기랄!” 나는 그녀를 과거로 되돌리려 했지만, 낭만적 테러리즘에 빠지고 말았다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“예수 콤플렉스” 나는 사랑받지 못하기에 더 큰 사랑을 받을 자격이있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt; ”나는 내가 다시 사랑에 빠졌다는걸 알았다.” 또 다른 사랑에 빠지다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;마치며&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; 내가 그녀를 사랑했던건, 그 아이가 나를 사랑했기 때문이 아니었을까? 사랑의 자유주의가 아니었을까? 서로의 마음에 의지가 되고, 내 자유의지를 침범당하지 않는 한에서 사랑하고. 나는 이 책을 읽으며 내 사랑의 과정과 알맞는 파편들을 찾을 수 있었고, 내가 이런 사랑의 과정을 거쳤음을 인지했다. 이 책으로 인해 더 성숙한 사랑을 할 수 있는 방법은 배우지 못했다. 하지만, 더 성숙한 사랑을 할 수 있는 마음을 얻었다.&lt;/p&gt;

&lt;p&gt; 처음에 이 책을 최근에 이별을 겪은분에게 추천드린다고 했습니다. 그건 이 책이 사랑의 과정을 보여주기 떄문이에요. 최근에 겪은 사랑의 과정을 처음부터 되짚어보세요. 처음엔 조금 힘들겠죠. 하지만, 되짚어 보면 마음이 한결 편해질 겁니다. 책을 읽으면서 사랑했던 순간이 떠오르면 그 순간을 계속 생각하세요. 책을 빨리 읽지 못해도 좋아요. 한참동안 읽으세요. 책은 읽기만 할때가 아니라 책을 읽고 생각을 할때 그 가치가 더욱 높아지고, 자신이 한결 성숙해 집니다.&lt;/p&gt;

&lt;p&gt; 제가 숙제를 한가지 내드릴게요. 지금 사랑하고 계신 분들은 사랑하는 사람을 조금 더 사랑해 보세요.&lt;/p&gt;

&lt;p&gt;이별을 겪으신 분들은 또 다른 사랑을 할 준비를 오늘부터 하는 겁니다. &lt;/p&gt;

&lt;p&gt; 지금 죽을 것 같은 이별을 겪었어도, 다시 사랑할 수 있고, 곧 치유가 됩니다. 소설 속 주인공 ‘나’가 도와줄 거에요.&lt;/p&gt;

&lt;p&gt; 지금까지 ‘알랭 드 보통’의 소설 ‘왜 나는 너를 사랑하는가’에 대해서 였습니다.&lt;/p&gt;
</description>
        <pubDate>Tue, 29 Mar 2016 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/review/2016/03/29/reveiw-why-am-i-love-you/</link>
        <guid isPermaLink="true">http://localhost:4000/review/2016/03/29/reveiw-why-am-i-love-you/</guid>
        
        <category>movie</category>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>[노트북 바이블] 디스플레이 이야기 [1탄 패널 (TN 패널 vs IPS 패널)]</title>
        <description>&lt;p&gt;제가 생각했을 때 노트북을 구매할 때 중요하게 고려해야 될 요소들이 몇 가지 있습니다. 바로 디스플레이, CPU, 램, 저장장치, 무게가 그것인데요. 오늘은 그 중에 디스플레이에 대해 자세히 이야기 해보도록 하겠습니다.&lt;/p&gt;

&lt;p&gt;디스플레이를 볼 때 우리는 보통 패널, 크기, 해상도를 보게 됩니다. 디스플레이는 사실 우리가 노트북을 통해 하는 모든 일들을 보여주므로 노트북을 켰다면 항상 마주하게 됩니다. 그만큼 중요한 요소이기도 하죠. 이 요소가 마음에 들지 않는다면 매번 노트북을 사용할 때마다 후회하겠죠? 그렇기 때문에 미리 알아보고 마음에 드는 디스플레이를 선택하는 것이 좋습니다.&lt;/p&gt;

&lt;p&gt;저와 함께 가장 먼저 알아볼 디스플레이 요소는 패널입니다. 제가 이미 적었던 바이블에서 잠깐 이야기 한적이 있는데 패널은 크게 TN패널과 IPS패널로 이분화됩니다. 이미 말씀드렸듯이 잘 모르시겠으면 IPS패널을 선택하시면 아마 후회 없으실겁니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;자, 그럼 두 패널이 어떤 차이가 있는지 알아보도록 하겠습니다.&lt;/p&gt;

&lt;p&gt;TN패널과 IPS패널의 차이는 세가지라고 생각하시면 됩니다. 바로 시야각, 색감, 응답속도&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;TN과 IPS 패널의 차이 : 시야각, 색감, 응답속도&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;시야각&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;시야각이란 디스플레이를 보는 각도에 따라서 디스플레이가 표현하는 정보가 보이는지 보이지 않는지를 이야기 합니다. 요즘 IPS패널의 경우 상하좌우 178도 정도의 시야각을 가지고있습니다. 180도가 넘어가면 우리가 디스플레이 뒤쪽으로 넘어간다는 이야기이기때문에 디스플레이를 볼 수만 있다면 정보를 확인할 수 있다는 말이 됩니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;색감&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;색감은 말그대로 우리가 느끼는 색에대한 감각입니다. 얼마나 자연스럽게 느껴지는지 너무 인위적인 색깔로 보여주지 않는지에 따라 색감을 판단하곤 합니다. 그런 면에 있어서 IPS패널이 좀 더 우리에게 자연스럽고 선명하게 색을 표현합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;응답속도&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;응답속도는 실제 반응에 대해 디스플레이가 반응할때까지의 딜레이를 이야기 합니다. 실제와 동시에 일어난다면 응답속도는 0이게 되는 거죠. 응답속도는 tn패널이 빠릅니다. 이 응답속도의 경우 10ms 이하로는 인간이 차이를 느끼기 어렵다고 합니다. IPS패널의경우 약 5ms , TN패널의 경우 약 2ms정도로 이루어져 있습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;오늘은 패널에 관해서 이야기 해보았습니다. 오늘 글을 보셨으면 제가 왜 ‘별일 없으면 IPS패널을 선택하세요.’ 라는 이야기를 했는지 이해가 되셨을 것 같습니다.&lt;/p&gt;

&lt;p&gt;마지막으로 요약하고 글을 마치도록 하겠습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;시야각 : TN   색감 : TN   응답속도: TN &amp;gt; IPS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;좋은 하루 되세요!&lt;/p&gt;
</description>
        <pubDate>Tue, 29 Mar 2016 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/tip/2016/03/29/display-1/</link>
        <guid isPermaLink="true">http://localhost:4000/tip/2016/03/29/display-1/</guid>
        
        <category>tip</category>
        
        
        <category>tip</category>
        
      </item>
    
      <item>
        <title>[리뷰]버스커버스커 2집 - 아름다운 나이</title>
        <description>&lt;h2 id=&quot;8아름다운-나이&quot;&gt;8.아름다운 나이&lt;/h2&gt;

&lt;p&gt;개인적으로 이번 앨범에서 가장 좋아하는 트랙이다. 대학생이 되는 나이는 20대 극 초반. 다들 자신이 다 큰 줄 알겠지만 사실은 아직 우린 청소년의 연장일 뿐이다.&lt;/p&gt;

&lt;p&gt;연애관도 제대로 잡혀있지 않고, 철이 덜 들어도 이상하지는 않은 나이. 이 곡은 아직 그런 순수한 남녀의 만남을 이야기 하고 있다.&lt;/p&gt;

&lt;p&gt;한여름 밤 깊은 밤을 함께 걷는 남녀는 괜히 어색한 감정에 휩싸인다. 베태랑 선수들이라면 근처 조용한 곳이라도 갔을 텐데, 그들은 조용한 곳에 가기엔 당황스럽고, 마냥 걷자니 무얼 해야할지 모른다.&lt;/p&gt;

&lt;p&gt;하지만 적어도 남자는 한가지는 알고 있다. 너와 있으면 좋다는 거. 지금 이 밤에 너를 보내면 후회 할 거라는걸. 남자는 무슨 일을 벌이거나 어떤 특별한 것을 할 생각은 없지만, 조금더 가까워지길 바라는, 풋풋한 감정을 이야기 한다.&lt;/p&gt;

&lt;p&gt;우리는 아직 다 여물지 않았지만,
그 성숙하지 못한 약간의 모자람이 아름다운 나이인 것 같다.&lt;/p&gt;

&lt;p&gt;이 곡은 그런 아름다운 나이의 호감을 가진 남녀가 늦은 밤 같이 있으며 느끼는 감정을 표현한 곡으로, 풋풋한 가사와 장범준의 잔잔한 창법이 두드러지는 곡이다.&lt;/p&gt;

&lt;hr /&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;버스커버스커 - 아름다운 나이


그러니까 우린 아직 서로를 모를 사이
이런 밤을 때론 같이 보내진 못한 사이
그러니까 왠지 아직 여름의 늦은 밤이
단둘이 걸어가긴 어색한 그런 나이

하지만 어쩌나 이 밤이 지나면 안된다고 믿었어
있잖아 난

너와 있으면 좋아 너랑 있는 나 어때
친구가 되긴 싫어 어색한 사인 싫어
너와 있으면 좋아 너랑 있는 나 어때
친구가 되긴 싫어 어색한 사인 싫어

그러니까 니가 아직 아무 말도 못한 사이
사라질까 우린 아직 잠 못 이룬 이 시간이

아쉬워 내 맘속 오늘이 아니면 안된다고 믿었어
있잖아 난 너와

너와 있으면 좋아 너랑 있는 나 어때
친구가 되긴 싫어 어색한 사인 싫어
너와 있으면 좋아 너랑 있는 나 어때
친구가 되긴 싫어 어색한 사인 싫어

너와 있으면 너무 좋아 너랑 있는 나는 어떠니
우리가 함께 한다면 정말 난

너와 있으면 좋아 너랑 있는 나 어때
친구가 되긴 싫어 어색한 사인 싫어
너와 있으면 좋아 너랑 있는 나 어때
친구가 되긴 싫어 어색한 사인 싫어
워어 워우워

이런 밤은 왠지 아직 어색한 그런 사이
그러니까 우린 아직 아름다운 그런 나이

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 29 Feb 2016 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/review/2016/02/29/review-busker-beatiful-age/</link>
        <guid isPermaLink="true">http://localhost:4000/review/2016/02/29/review-busker-beatiful-age/</guid>
        
        <category>music</category>
        
        
        <category>review</category>
        
      </item>
    
  </channel>
</rss>
